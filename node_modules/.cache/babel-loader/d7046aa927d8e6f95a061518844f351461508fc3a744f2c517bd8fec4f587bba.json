{"ast":null,"code":"var _jsxFileName = \"/home/dusijian/worksapce/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport './App.css';\nfunction App() {\n  _s();\n  const [videoSrc, setVideoSrc] = useState('');\n  const [message, setMessage] = useState('Click Start to transcode');\n  const ffmpeg = createFFmpeg({\n    log: true\n  });\n  const doTranscode = async () => {\n    setMessage('Loading ffmpeg-core.js');\n    await ffmpeg.load();\n    setMessage('Start transcoding');\n    ffmpeg.FS('writeFile', 'test.avi', await fetchFile('/flame.avi'));\n    await ffmpeg.run('-i', 'test.avi', 'test.mp4');\n    setMessage('Complete transcoding');\n    const data = ffmpeg.FS('readFile', 'test.mp4');\n    setVideoSrc(URL.createObjectURL(new Blob([data.buffer], {\n      type: 'video/mp4'\n    })));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    src: videoSrc,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: doTranscode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, message));\n}\n_s(App, \"GKtMcrQauNNl5Rd7ztprnFTrr6s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createFFmpeg","fetchFile","App","_s","videoSrc","setVideoSrc","message","setMessage","ffmpeg","log","doTranscode","load","FS","run","data","URL","createObjectURL","Blob","buffer","type","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","onClick","_c","$RefreshReg$"],"sources":["/home/dusijian/worksapce/react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport './App.css';\n\nfunction App() {\n  const [videoSrc, setVideoSrc] = useState('');\n  const [message, setMessage] = useState('Click Start to transcode');\n  const ffmpeg = createFFmpeg({\n    log: true,\n  });\n  const doTranscode = async () => {\n    setMessage('Loading ffmpeg-core.js');\n    await ffmpeg.load();\n    setMessage('Start transcoding');\n    ffmpeg.FS('writeFile', 'test.avi', await fetchFile('/flame.avi'));\n    await ffmpeg.run('-i', 'test.avi', 'test.mp4');\n    setMessage('Complete transcoding');\n    const data = ffmpeg.FS('readFile', 'test.mp4');\n    setVideoSrc(URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' })));\n  };\n  return (\n    <div className=\"App\">\n      <p/>\n      <video src={videoSrc} controls></video><br/>\n      <button onClick={doTranscode}>Start</button>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,SAAS,QAAQ,gBAAgB;AACxD,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,0BAA0B,CAAC;EAClE,MAAMS,MAAM,GAAGR,YAAY,CAAC;IAC1BS,GAAG,EAAE;EACP,CAAC,CAAC;EACF,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BH,UAAU,CAAC,wBAAwB,CAAC;IACpC,MAAMC,MAAM,CAACG,IAAI,EAAE;IACnBJ,UAAU,CAAC,mBAAmB,CAAC;IAC/BC,MAAM,CAACI,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,MAAMX,SAAS,CAAC,YAAY,CAAC,CAAC;IACjE,MAAMO,MAAM,CAACK,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC;IAC9CN,UAAU,CAAC,sBAAsB,CAAC;IAClC,MAAMO,IAAI,GAAGN,MAAM,CAACI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;IAC9CP,WAAW,CAACU,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACH,IAAI,CAACI,MAAM,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC,CAAC,CAAC;EAClF,CAAC;EACD,oBACErB,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClB7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAI,eACJ7B,KAAA,CAAAsB,aAAA;IAAOQ,GAAG,EAAExB,QAAS;IAACyB,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAS,eAAA7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAK,eAC5C7B,KAAA,CAAAsB,aAAA;IAAQU,OAAO,EAAEpB,WAAY;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAK,CAAS,eAC5C7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIrB,OAAO,CAAK,CACZ;AAEV;AAACH,EAAA,CAxBQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}